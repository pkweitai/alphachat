worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    keepalive_timeout  65;

    # Redirect HTTP to HTTPS for alphaaie.org
    server {
        listen 80;
        server_name alphaaie.org www.alphaaie.org;

        # Redirect all HTTP traffic to HTTPS
        return 301 https://alphaaie.org$request_uri;

        }

    # HTTPS configuration for alphaaie.org
    server {
        listen 443 ssl;
        server_name alphaaie.org www.alphaaie.org;

        ssl_certificate /etc/letsencrypt/live/alphaaie.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/alphaaie.org/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

        # Security Headers
        
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Content-Type-Options "nosniff";

        # Redirect root to /alpha
        location = / {
            return 301 https://alphaaie.org/alpha;
        }

        # Proxy other requests to the application backend
        location / {
            proxy_pass http://127.0.0.1:5643;  # Replace with your app's backend address if different
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Let's Encrypt ACME challenge location
        location /.well-known/acme-challenge/ {
            root /usr/local/var/www;
        }
    }

    # Redirect HTTP to HTTPS for storyflix.live and api.storyflix.live
    server {
        listen 80;
        server_name storyflix.live www.storyflix.live api.storyflix.live;

        # Redirect all HTTP traffic to HTTPS
        return 301 https://$host$request_uri;
    }

    # HTTPS configuration for storyflix.live and api.storyflix.live
    server {
        listen 443 ssl;
        server_name storyflix.live www.storyflix.live;

        ssl_certificate /etc/letsencrypt/live/storyflix.live/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/storyflix.live/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

        # Security Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Content-Type-Options "nosniff";

        # Proxy requests to the application backend
        location / {
            proxy_pass http://127.0.0.1:5643;  # Replace with your app's backend address if different
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Let's Encrypt ACME challenge location
        location /.well-known/acme-challenge/ {
            root /usr/local/var/www;
        }
    }

    # HTTPS configuration for api.storyflix.live
    server {
        listen 443 ssl;
        server_name api.storyflix.live;

        ssl_certificate /etc/letsencrypt/live/storyflix.live/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/storyflix.live/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

        # Security Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Content-Type-Options "nosniff";

        location / {
            proxy_pass http://192.168.1.38:5000;  # API backend server
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    include servers/*;
}
